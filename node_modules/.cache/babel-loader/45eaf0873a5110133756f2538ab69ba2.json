{"remainingRequest":"F:\\WebstormProjects\\data-quality\\node_modules\\babel-loader\\lib\\index.js!F:\\WebstormProjects\\data-quality\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\WebstormProjects\\data-quality\\src\\store\\modules\\user\\index.js","dependencies":[{"path":"F:\\WebstormProjects\\data-quality\\src\\store\\modules\\user\\index.js","mtime":1564560921015},{"path":"F:\\WebstormProjects\\data-quality\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\WebstormProjects\\data-quality\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\WebstormProjects\\data-quality\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"F:\\\\WebstormProjects\\\\data-quality\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n\n/* eslint-disable no-param-reassign,no-shadow */\nimport { make } from 'vuex-pathify';\nimport axios from '@/plugins/axios'; // import userApi from '@/api/user/user-api';\n\nvar state = {\n  user: {\n    nickname: '匿名'\n  }\n};\nvar actions = {\n  /*  async init(context) {\n    const token = window.sessionStorage.getItem('token');\n    const user = JSON.parse(window.sessionStorage.getItem('user'));\n    if (token !== null && user !== null) {\n      context.commit('SET_USER', user);\n      axios.defaults.headers.common.Authorization = token;\n      return true;\n    }\n    return false;\n  },\n   async login(context, { username, password }) {\n    const result = await userApi.login({ username, password });\n    window.sessionStorage.setItem('token', result.headers.authorization);\n    window.sessionStorage.setItem('user', JSON.stringify(result.data));\n    context.commit('SET_USER', result.data);\n    axios.defaults.headers.common.Authorization = result.headers.authorization;\n    return result;\n  }, */\n  logout: function () {\n    var _logout = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(context) {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              context.commit('SET_USER', null);\n              delete axios.defaults.headers.common.Authorization;\n              window.sessionStorage.removeItem('token');\n              window.sessionStorage.removeItem('user');\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function logout(_x) {\n      return _logout.apply(this, arguments);\n    }\n\n    return logout;\n  }()\n};\nvar getters = {\n  isLogin: function isLogin(state) {\n    return state.user !== null;\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  actions: actions,\n  getters: getters,\n  mutations: make.mutations(state)\n};",{"version":3,"sources":["F:\\WebstormProjects\\data-quality\\src\\store\\modules\\user\\index.js"],"names":["make","axios","state","user","nickname","actions","logout","context","commit","defaults","headers","common","Authorization","window","sessionStorage","removeItem","getters","isLogin","namespaced","mutations"],"mappings":";;;AAAA;AACA,SAASA,IAAT,QAAqB,cAArB;AACA,OAAOC,KAAP,MAAkB,iBAAlB,C,CACA;;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN;AADM,CAAd;AAMA,IAAMC,OAAO,GAAG;AAEd;;;;;;;;;;;;;;;;;;AAoBMC,EAAAA,MAtBQ;AAAA;AAAA;AAAA,6CAsBDC,OAtBC;AAAA;AAAA;AAAA;AAAA;AAuBZA,cAAAA,OAAO,CAACC,MAAR,CAAe,UAAf,EAA2B,IAA3B;AACA,qBAAOP,KAAK,CAACQ,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8BC,aAArC;AACAC,cAAAA,MAAM,CAACC,cAAP,CAAsBC,UAAtB,CAAiC,OAAjC;AACAF,cAAAA,MAAM,CAACC,cAAP,CAAsBC,UAAtB,CAAiC,MAAjC;;AA1BY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAhB;AA8BA,IAAMC,OAAO,GAAG;AACdC,EAAAA,OAAO,EAAE,iBAAAf,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAN,KAAe,IAAnB;AAAA;AADA,CAAhB;AAIA,eAAe;AACbe,EAAAA,UAAU,EAAE,IADC;AAEbhB,EAAAA,KAAK,EAALA,KAFa;AAGbG,EAAAA,OAAO,EAAPA,OAHa;AAIbW,EAAAA,OAAO,EAAPA,OAJa;AAKbG,EAAAA,SAAS,EAAEnB,IAAI,CAACmB,SAAL,CAAejB,KAAf;AALE,CAAf","sourcesContent":["/* eslint-disable no-param-reassign,no-shadow */\nimport { make } from 'vuex-pathify';\nimport axios from '@/plugins/axios';\n// import userApi from '@/api/user/user-api';\n\nconst state = {\n  user: {\n    nickname: '匿名',\n  },\n};\n\nconst actions = {\n\n  /*  async init(context) {\n    const token = window.sessionStorage.getItem('token');\n    const user = JSON.parse(window.sessionStorage.getItem('user'));\n    if (token !== null && user !== null) {\n      context.commit('SET_USER', user);\n      axios.defaults.headers.common.Authorization = token;\n      return true;\n    }\n    return false;\n  },\n\n  async login(context, { username, password }) {\n    const result = await userApi.login({ username, password });\n    window.sessionStorage.setItem('token', result.headers.authorization);\n    window.sessionStorage.setItem('user', JSON.stringify(result.data));\n    context.commit('SET_USER', result.data);\n    axios.defaults.headers.common.Authorization = result.headers.authorization;\n    return result;\n  }, */\n\n  async logout(context) {\n    context.commit('SET_USER', null);\n    delete axios.defaults.headers.common.Authorization;\n    window.sessionStorage.removeItem('token');\n    window.sessionStorage.removeItem('user');\n  },\n};\n\nconst getters = {\n  isLogin: state => state.user !== null,\n};\n\nexport default {\n  namespaced: true,\n  state,\n  actions,\n  getters,\n  mutations: make.mutations(state),\n};\n"]}]}